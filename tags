!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
BOX_INTER	fbsplash/splash.h	177;"	d
BOX_NOOVER	fbsplash/splash.h	176;"	d
BOX_SILENT	fbsplash/splash.h	178;"	d
CACHED_BITMAP	fbsplash/ttf.h	8;"	d
CACHED_METRICS	fbsplash/ttf.h	7;"	d
CACHED_PIXMAP	fbsplash/ttf.h	9;"	d
CLAMP	fbsplash/splash.h	46;"	d
CONFIG_FBSPLASH	fbsplash/config.h	4;"	d
CONFIG_MNG	fbsplash/config.h	5;"	d
CONFIG_PNG	fbsplash/config.h	1;"	d
CONFIG_TTF	fbsplash/config.h	2;"	d
CONFIG_TTF_KERNEL	fbsplash/config.h	3;"	d
DEBUG	fbsplash/splash.h	47;"	d
DEFAULT_FONT	fbsplash/splash.h	31;"	d
DEFAULT_MESSAGE	fbsplash/splash.h	30;"	d
DEFAULT_PTSIZE	fbsplash/ttf.c	38;"	d	file:
DEFAULT_THEME	fbsplash/splash.h	32;"	d
ENDIANESS	fbsplash/splash.h	/^enum ENDIANESS { little, big };$/;"	g
ESVC	fbsplash/splash.h	/^enum ESVC { e_display, e_svc_inact_start, e_svc_inact_stop, e_svc_start, $/;"	g
FADEIN_STEPS	fbsplash/effects.c	23;"	d	file:
FADEIN_STEPS_DC	fbsplash/effects.c	24;"	d	file:
FB_SPLASH_IO_ORIG_KERNEL	fbsplash/splash.h	15;"	d
FB_SPLASH_IO_ORIG_USER	fbsplash/splash.h	14;"	d
FT_CEIL	fbsplash/ttf.h	18;"	d
FT_FLOOR	fbsplash/ttf.h	17;"	d
F_ANIM_LOOP	fbsplash/splash.h	115;"	d
F_ANIM_METHOD_MASK	fbsplash/splash.h	113;"	d
F_ANIM_ONCE	fbsplash/splash.h	114;"	d
F_ANIM_PROPORTIONAL	fbsplash/splash.h	116;"	d
F_ANIM_SILENT	fbsplash/splash.h	110;"	d
F_ANIM_STATUS_DONE	fbsplash/splash.h	118;"	d
F_ANIM_VERBOSE	fbsplash/splash.h	111;"	d
F_HS_BOTTOM	fbsplash/splash.h	140;"	d
F_HS_HMIDDLE	fbsplash/splash.h	143;"	d
F_HS_HORIZ_MASK	fbsplash/splash.h	135;"	d
F_HS_LEFT	fbsplash/splash.h	142;"	d
F_HS_RIGHT	fbsplash/splash.h	144;"	d
F_HS_TOP	fbsplash/splash.h	138;"	d
F_HS_VERT_MASK	fbsplash/splash.h	136;"	d
F_HS_VMIDDLE	fbsplash/splash.h	139;"	d
F_TXT_EVAL	fbsplash/splash.h	133;"	d
F_TXT_EXEC	fbsplash/splash.h	132;"	d
F_TXT_SILENT	fbsplash/splash.h	130;"	d
F_TXT_VERBOSE	fbsplash/splash.h	131;"	d
Find_Glyph	fbsplash/ttf.c	/^static FT_Error Find_Glyph(TTF_Font* font, unsigned short ch, int want)$/;"	f	file:
Flush_Cache	fbsplash/ttf.c	/^static void Flush_Cache(TTF_Font* font)$/;"	f	file:
Flush_Glyph	fbsplash/ttf.c	/^static void Flush_Glyph(c_glyph* glyph)$/;"	f	file:
Load_Glyph	fbsplash/ttf.c	/^static FT_Error Load_Glyph(TTF_Font* font, unsigned short ch, c_glyph* cached, int want)$/;"	f	file:
MAX_BOXES	fbsplash/splash.h	20;"	d
MAX_ICONS	fbsplash/splash.h	21;"	d
MAX_RECTS	fbsplash/splash.h	19;"	d
MIN_ADVANCE_PERCENT	usplash/userui_usplash_core.c	28;"	d	file:
NUM_GRAYS	fbsplash/ttf.c	39;"	d	file:
PAGE_SIZE	userui_core.c	38;"	d	file:
PALETTE_COLORS	fbsplash/image.c	69;"	d	file:
PATH_DEV	fbsplash/splash.h	22;"	d
PATH_PROC	fbsplash/splash.h	23;"	d
PATH_SYS	fbsplash/splash.h	24;"	d
PROGRESS_MAX	fbsplash/splash.h	36;"	d
SPLASH_DEV	fbsplash/splash.h	25;"	d
SPLASH_FIFO	fbsplash/config.h	7;"	d
SUSPEND_ANY_SECTION	userui.h	/^	SUSPEND_ANY_SECTION,$/;"	e	enum:__anon3
SUSPEND_BMAP	userui.h	/^	SUSPEND_BMAP,$/;"	e	enum:__anon3
SUSPEND_CAN_CANCEL	userui.h	/^	SUSPEND_CAN_CANCEL,$/;"	e	enum:__anon2
SUSPEND_DISABLE_SYSDEV_SUPPORT	userui.h	/^	SUSPEND_DISABLE_SYSDEV_SUPPORT,$/;"	e	enum:__anon2
SUSPEND_EAT_MEMORY	userui.h	/^	SUSPEND_EAT_MEMORY,$/;"	e	enum:__anon3
SUSPEND_ERROR	userui.h	44;"	d
SUSPEND_EXTENTS	userui.h	/^	SUSPEND_EXTENTS,$/;"	e	enum:__anon3
SUSPEND_FREEZER	userui.h	/^	SUSPEND_FREEZER,$/;"	e	enum:__anon3
SUSPEND_FREEZER_TEST	userui.h	/^	SUSPEND_FREEZER_TEST,$/;"	e	enum:__anon2
SUSPEND_FREEZER_TEST_SHOWALL	userui.h	/^	SUSPEND_FREEZER_TEST_SHOWALL,$/;"	e	enum:__anon2
SUSPEND_FREEZE_TIMERS	userui.h	/^	SUSPEND_FREEZE_TIMERS,$/;"	e	enum:__anon2
SUSPEND_HEADER	userui.h	/^	SUSPEND_HEADER,$/;"	e	enum:__anon3
SUSPEND_HIGH	userui.h	47;"	d
SUSPEND_INTEGRITY	userui.h	/^	SUSPEND_INTEGRITY$/;"	e	enum:__anon3
SUSPEND_IO	userui.h	/^	SUSPEND_IO,$/;"	e	enum:__anon3
SUSPEND_KEEP_IMAGE	userui.h	/^	SUSPEND_KEEP_IMAGE,$/;"	e	enum:__anon2
SUSPEND_KEEP_METADATA	userui.h	/^	SUSPEND_KEEP_METADATA,$/;"	e	enum:__anon2
SUSPEND_LOGALL	userui.h	/^	SUSPEND_LOGALL,$/;"	e	enum:__anon2
SUSPEND_LOW	userui.h	45;"	d
SUSPEND_MEDIUM	userui.h	46;"	d
SUSPEND_MEMORY	userui.h	/^	SUSPEND_MEMORY,$/;"	e	enum:__anon3
SUSPEND_MEM_POOL	userui.h	/^	SUSPEND_MEM_POOL,$/;"	e	enum:__anon3
SUSPEND_NOPAGESET2	userui.h	/^	SUSPEND_NOPAGESET2,$/;"	e	enum:__anon2
SUSPEND_NOSAVE	userui.h	/^	SUSPEND_NOSAVE,$/;"	e	enum:__anon3
SUSPEND_PAGESETS	userui.h	/^	SUSPEND_PAGESETS,$/;"	e	enum:__anon3
SUSPEND_PAUSE	userui.h	/^	SUSPEND_PAUSE,$/;"	e	enum:__anon2
SUSPEND_PAUSE_NEAR_PAGESET_END	userui.h	/^	SUSPEND_PAUSE_NEAR_PAGESET_END,$/;"	e	enum:__anon2
SUSPEND_RANGE_PARANOIA	userui.h	/^	SUSPEND_RANGE_PARANOIA,$/;"	e	enum:__anon3
SUSPEND_REBOOT	userui.h	/^	SUSPEND_REBOOT,$/;"	e	enum:__anon2
SUSPEND_SINGLESTEP	userui.h	/^	SUSPEND_SINGLESTEP,$/;"	e	enum:__anon2
SUSPEND_SLOW	userui.h	/^	SUSPEND_SLOW,$/;"	e	enum:__anon2
SUSPEND_SPINLOCKS	userui.h	/^	SUSPEND_SPINLOCKS,$/;"	e	enum:__anon3
SUSPEND_STATUS	userui.h	42;"	d
SUSPEND_TEST_FILTER_SPEED	userui.h	/^	SUSPEND_TEST_FILTER_SPEED,$/;"	e	enum:__anon2
SUSPEND_UI_MSG	userui.h	43;"	d
SUSPEND_USERUI_INTERFACE_VERSION	suspend_userui.h	4;"	d
SUSPEND_USE_ACPI_S4	userui.h	/^	SUSPEND_USE_ACPI_S4,$/;"	e	enum:__anon2
SUSPEND_VERBOSE	userui.h	48;"	d
SUSPEND_VGA_POST	userui.h	/^	SUSPEND_VGA_POST$/;"	e	enum:__anon2
SUSPEND_WRITER	userui.h	/^	SUSPEND_WRITER,$/;"	e	enum:__anon3
TASK	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	g
THEME_DIR	fbsplash/config.h	6;"	d
TTF_CloseFont	fbsplash/ttf.c	/^void TTF_CloseFont(TTF_Font* font)$/;"	f
TTF_DEFAULT	fbsplash/splash.h	33;"	d
TTF_Font	fbsplash/ttf.h	/^typedef struct _TTF_Font TTF_Font;$/;"	t	typeref:struct:_TTF_Font
TTF_Init	fbsplash/ttf.c	/^int TTF_Init(void)$/;"	f
TTF_OpenFont	fbsplash/ttf.c	/^TTF_Font* TTF_OpenFont(const char *file, int ptsize)$/;"	f
TTF_OpenFontIndex	fbsplash/ttf.c	/^TTF_Font* TTF_OpenFontIndex(const char *file, int ptsize, long index)$/;"	f
TTF_PrimeCache	fbsplash/ttf.c	/^int TTF_PrimeCache(char *text, TTF_Font *font, int style) {$/;"	f
TTF_Quit	fbsplash/ttf.c	/^void TTF_Quit(void)$/;"	f
TTF_Render	fbsplash/ttf.c	/^int TTF_Render(u8 *target, char *text, TTF_Font *font, int style, int x, int y, color col, u8 hotspot)$/;"	f
TTF_RenderText_Shaded	fbsplash/ttf.c	/^unsigned char*TTF_RenderText_Shaded(u8 *target, const char *text, TTF_Font *font, int x, int y, color col, u8 hotspot)$/;"	f
TTF_RenderUNICODE_Shaded	fbsplash/ttf.c	/^void TTF_RenderUNICODE_Shaded(u8 *target, const unsigned short *text,$/;"	f
TTF_STYLE_BOLD	fbsplash/ttf.h	12;"	d
TTF_STYLE_ITALIC	fbsplash/ttf.h	13;"	d
TTF_STYLE_NORMAL	fbsplash/ttf.h	11;"	d
TTF_STYLE_UNDERLINE	fbsplash/ttf.h	14;"	d
TTF_SetFontStyle	fbsplash/ttf.c	/^void TTF_SetFontStyle(TTF_Font* font, int style)$/;"	f
TTF_SizeUNICODE	fbsplash/ttf.c	/^int TTF_SizeUNICODE(TTF_Font *font, const unsigned short *text, int *w, int *h)$/;"	f
TTF_initialized	fbsplash/ttf.c	/^static int TTF_initialized = 0;$/;"	v	file:
TTY_SILENT	fbsplash/splash.h	27;"	d
TTY_VERBOSE	fbsplash/splash.h	28;"	d
UNICODE	fbsplash/ttf.c	66;"	d	file:
USERUI_MSG_ABORT	suspend_userui.h	/^	USERUI_MSG_ABORT = 0x11,$/;"	e	enum:__anon1
USERUI_MSG_BASE	suspend_userui.h	/^	USERUI_MSG_BASE = 0x10,$/;"	e	enum:__anon1
USERUI_MSG_CLEANUP	suspend_userui.h	/^	USERUI_MSG_CLEANUP = 0x24,$/;"	e	enum:__anon1
USERUI_MSG_GET_DEBUGGING	suspend_userui.h	/^	USERUI_MSG_GET_DEBUGGING = 0x19,$/;"	e	enum:__anon1
USERUI_MSG_GET_DEBUG_STATE	suspend_userui.h	/^	USERUI_MSG_GET_DEBUG_STATE = 0x14,$/;"	e	enum:__anon1
USERUI_MSG_GET_LOGLEVEL	suspend_userui.h	/^	USERUI_MSG_GET_LOGLEVEL = 0x1C,$/;"	e	enum:__anon1
USERUI_MSG_GET_POWERDOWN_METHOD	suspend_userui.h	/^	USERUI_MSG_GET_POWERDOWN_METHOD = 0x1A,$/;"	e	enum:__anon1
USERUI_MSG_GET_STATE	suspend_userui.h	/^	USERUI_MSG_GET_STATE = 0x13,$/;"	e	enum:__anon1
USERUI_MSG_IS_DEBUGGING	suspend_userui.h	/^	USERUI_MSG_IS_DEBUGGING = 0x28,$/;"	e	enum:__anon1
USERUI_MSG_KEYPRESS	suspend_userui.h	/^	USERUI_MSG_KEYPRESS = 0x26,$/;"	e	enum:__anon1
USERUI_MSG_MAX	suspend_userui.h	/^	USERUI_MSG_MAX,$/;"	e	enum:__anon1
USERUI_MSG_MESSAGE	suspend_userui.h	/^	USERUI_MSG_MESSAGE = 0x21,$/;"	e	enum:__anon1
USERUI_MSG_NOFREEZE_ACK	suspend_userui.h	/^	USERUI_MSG_NOFREEZE_ACK = 0x27,$/;"	e	enum:__anon1
USERUI_MSG_NOFREEZE_ME	suspend_userui.h	/^	USERUI_MSG_NOFREEZE_ME = 0x16,$/;"	e	enum:__anon1
USERUI_MSG_POST_ATOMIC_RESTORE	suspend_userui.h	/^	USERUI_MSG_POST_ATOMIC_RESTORE = 0x25,$/;"	e	enum:__anon1
USERUI_MSG_PRINTK	suspend_userui.h	/^	USERUI_MSG_PRINTK = 0x1E,$/;"	e	enum:__anon1
USERUI_MSG_PROGRESS	suspend_userui.h	/^	USERUI_MSG_PROGRESS = 0x22,$/;"	e	enum:__anon1
USERUI_MSG_READY	suspend_userui.h	/^	USERUI_MSG_READY = 0x10,$/;"	e	enum:__anon1
USERUI_MSG_SET_DEBUG_STATE	suspend_userui.h	/^	USERUI_MSG_SET_DEBUG_STATE = 0x15,$/;"	e	enum:__anon1
USERUI_MSG_SET_LOGLEVEL	suspend_userui.h	/^	USERUI_MSG_SET_LOGLEVEL = 0x1D,$/;"	e	enum:__anon1
USERUI_MSG_SET_POWERDOWN_METHOD	suspend_userui.h	/^	USERUI_MSG_SET_POWERDOWN_METHOD = 0x1B,$/;"	e	enum:__anon1
USERUI_MSG_SET_STATE	suspend_userui.h	/^	USERUI_MSG_SET_STATE = 0x12,$/;"	e	enum:__anon1
USERUI_MSG_SPACE	suspend_userui.h	/^	USERUI_MSG_SPACE = 0x18,$/;"	e	enum:__anon1
USERUI_VERSION	userui.h	8;"	d
UTF8_to_UNICODE	fbsplash/ttf.c	/^static unsigned short *UTF8_to_UNICODE(unsigned short *unicode, const char *utf8, int len)$/;"	f	file:
_FBANIM_MNG_H_	fbsplash/mng_splash.h	2;"	d
_GNU_SOURCE	userui_core.c	12;"	d	file:
_SUSPEND_USERUI_H_	suspend_userui.h	2;"	d
_TTF_Font	fbsplash/ttf.h	/^struct _TTF_Font {$/;"	s
_TTF_H	fbsplash/ttf.h	2;"	d
_USERUI_H_	userui.h	2;"	d
__KERNEL__	fbsplash/render.c	19;"	d	file:
__KERNEL__	fbsplash/render.c	21;"	d	file:
__SPLASH_H__	fbsplash/splash.h	2;"	d
__print_mng_error	fbsplash/mng_splash.h	/^static inline void __print_mng_error(mng_handle mngh, char* s, ...)$/;"	f
a	fbsplash/splash.h	/^	float r, g, b, a;$/;"	m	struct:colorf
a	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:color
a	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:truecolor
a	suspend_userui.h	/^	unsigned long a, b, c, d;$/;"	m	struct:userui_msg_params
advance	fbsplash/ttf.h	/^	int advance;$/;"	m	struct:cached_glyph
anim	fbsplash/splash.h	/^} anim;$/;"	t	typeref:struct:__anon12
arg_export	fbsplash/common.c	/^char *arg_export = NULL;$/;"	v
arg_fb	fbsplash/common.c	/^int arg_fb = 0;$/;"	v
arg_kdmode	fbsplash/common.c	/^u8 arg_kdmode = KD_TEXT;$/;"	v
arg_mode	fbsplash/common.c	/^char arg_mode = 'v';$/;"	v
arg_progress	fbsplash/common.c	/^u16 arg_progress = 0;$/;"	v
arg_task	fbsplash/common.c	/^enum TASK arg_task = none; $/;"	v	typeref:enum:TASK
arg_theme	fbsplash/common.c	/^char *arg_theme = NULL;$/;"	v
arg_vc	fbsplash/common.c	/^int arg_vc = 0;$/;"	v
ascent	fbsplash/ttf.h	/^	int ascent;$/;"	m	struct:_TTF_Font
ascii_to_raw	userui_core.c	/^static char ascii_to_raw(char a) {$/;"	f	file:
assign_color	fbsplash/parse.c	662;"	d	file:
attr	fbsplash/splash.h	/^	u8 attr;$/;"	m	struct:__anon15
b	fbsplash/image.c	/^	u8 r, g, b;$/;"	m	struct:__anon4	file:
b	fbsplash/splash.h	/^	float r, g, b, a;$/;"	m	struct:colorf
b	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:color
b	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:truecolor
b	suspend_userui.h	/^	unsigned long a, b, c, d;$/;"	m	struct:userui_msg_params
bail	userui_core.c	43;"	d	file:
bail_err	userui_core.c	42;"	d	file:
barposn	userui_text.c	/^static int barwidth = 0, barposn = -1, newbarposn = 0;$/;"	v	file:
barwidth	userui_text.c	/^static int barwidth = 0, barposn = -1, newbarposn = 0;$/;"	v	file:
base_image	fbsplash/userui_fbsplash_core.c	/^static void *base_image;$/;"	v	file:
base_image_size	fbsplash/userui_fbsplash_core.c	/^static int base_image_size;$/;"	v	file:
bg_color	fbsplash/splash.h	/^	u8 bg_color;$/;"	m	struct:splash_config
big	fbsplash/splash.h	/^enum ENDIANESS { little, big };$/;"	e	enum:ENDIANESS
bitmap	fbsplash/ttf.h	/^	FT_Bitmap bitmap;$/;"	m	struct:cached_glyph
boot_message	fbsplash/ttf.c	/^char *boot_message = NULL;$/;"	v
box	fbsplash/splash.h	/^} box;$/;"	t	typeref:struct:__anon15
bytespp	fbsplash/common.c	/^int bytespp = 4;		\/* bytes per pixel *\/$/;"	v
c	suspend_userui.h	/^	unsigned long a, b, c, d;$/;"	m	struct:userui_msg_params
c_glyph	fbsplash/ttf.h	/^} c_glyph;$/;"	t	typeref:struct:cached_glyph
c_ll	fbsplash/splash.h	/^	struct color c_ul, c_ur, c_ll, c_lr; 	\/* upper left, upper right, $/;"	m	struct:__anon15	typeref:struct:__anon15::
c_lr	fbsplash/splash.h	/^	struct color c_ul, c_ur, c_ll, c_lr; 	\/* upper left, upper right, $/;"	m	struct:__anon15	typeref:struct:__anon15::
c_ul	fbsplash/splash.h	/^	struct color c_ul, c_ur, c_ll, c_lr; 	\/* upper left, upper right, $/;"	m	struct:__anon15	typeref:struct:__anon15::color
c_ur	fbsplash/splash.h	/^	struct color c_ul, c_ur, c_ll, c_lr; 	\/* upper left, upper right, $/;"	m	struct:__anon15	typeref:struct:__anon15::
cache	fbsplash/ttf.h	/^	c_glyph cache[256];$/;"	m	struct:_TTF_Font
cached	fbsplash/ttf.h	/^	unsigned short cached;$/;"	m	struct:cached_glyph
cached_glyph	fbsplash/ttf.h	/^typedef struct cached_glyph {$/;"	s
can_use_escape	userui_core.c	/^int can_use_escape = 0;$/;"	v
canvas	fbsplash/mng_splash.h	/^	char *canvas;$/;"	m	struct:__anon5
canvas_bytes_pp	fbsplash/mng_splash.h	/^	int canvas_h, canvas_w, canvas_bytes_pp;$/;"	m	struct:__anon5
canvas_h	fbsplash/mng_splash.h	/^	int canvas_h, canvas_w, canvas_bytes_pp;$/;"	m	struct:__anon5
canvas_w	fbsplash/mng_splash.h	/^	int canvas_h, canvas_w, canvas_bytes_pp;$/;"	m	struct:__anon5
ceil	fbsplash/ttf.c	/^int ceil(float a)$/;"	f
cf	fbsplash/parse.c	/^struct splash_config cf;$/;"	v	typeref:struct:splash_config
cf_pic	fbsplash/parse.c	/^char *cf_pic 		= NULL;$/;"	v
cf_pic256	fbsplash/parse.c	/^char *cf_pic256 	= NULL;$/;"	v
cf_silentpic	fbsplash/parse.c	/^char *cf_silentpic 	= NULL;$/;"	v
cf_silentpic256	fbsplash/parse.c	/^char *cf_silentpic256 	= NULL;		\/* pictures for 8bpp modes *\/$/;"	v
cleanup	userui.h	/^	void (*cleanup) ();$/;"	m	struct:userui_ops
clear_display	fbsplash/userui_fbsplash_core.c	/^static inline void clear_display() { write(1, "\\033c", 2); }$/;"	f	file:
clear_display	userui_text.c	/^static inline void clear_display() { write(1, "\\033[2J", 4); }$/;"	f	file:
clear_to_eol	userui_text.c	/^static inline void clear_to_eol() { write(1, "\\033K", 2); }$/;"	f	file:
close_del	fbsplash/splash.h	226;"	d
cmd_getcfg	fbsplash/cmd.c	/^void cmd_getcfg()$/;"	f
cmd_setcfg	fbsplash/cmd.c	/^void cmd_setcfg(unsigned char origin)$/;"	f
cmd_setpic	fbsplash/cmd.c	/^void cmd_setpic(struct fb_image *img, unsigned char origin)$/;"	f
cmd_setstate	fbsplash/cmd.c	/^void cmd_setstate(unsigned int state, unsigned char origin)$/;"	f
cmdline_options	userui.h	/^	char *(*cmdline_options) ();$/;"	m	struct:userui_ops
col	fbsplash/splash.h	/^	color col;$/;"	m	struct:__anon14
color	fbsplash/splash.h	/^typedef struct color {$/;"	s
color	fbsplash/splash.h	/^} __attribute__ ((packed)) color;$/;"	t	typeref:struct:color
colorf	fbsplash/splash.h	/^struct colorf {$/;"	s
common_keypress_handler	userui_core.c	/^int common_keypress_handler(int key) {$/;"	f
config_file	fbsplash/common.c	/^char *config_file = NULL;$/;"	v
config_opt	fbsplash/parse.c	/^struct config_opt {$/;"	s	file:
console_fd	userui_core.c	/^static int console_fd = -1;$/;"	v	file:
console_loglevel	userui_core.c	/^volatile int console_loglevel = 1;$/;"	v
cur_maximum	fbsplash/userui_fbsplash_core.c	/^static unsigned long cur_value, cur_maximum, last_pos;$/;"	v	file:
cur_value	fbsplash/userui_fbsplash_core.c	/^static unsigned long cur_value, cur_maximum, last_pos;$/;"	v	file:
cur_x	userui_text.c	/^static int video_num_lines, video_num_columns, cur_x = -1, cur_y = -1;$/;"	v	file:
cur_y	userui_text.c	/^static int video_num_lines, video_num_columns, cur_x = -1, cur_y = -1;$/;"	v	file:
current	fbsplash/ttf.h	/^	c_glyph *current;$/;"	m	struct:_TTF_Font
d	suspend_userui.h	/^	unsigned long a, b, c, d;$/;"	m	struct:userui_msg_params
data	fbsplash/mng_splash.h	/^	void *data;$/;"	m	struct:__anon5
debugging_enabled	userui_core.c	/^static int debugging_enabled = 0;$/;"	v	file:
descent	fbsplash/ttf.h	/^	int descent;$/;"	m	struct:_TTF_Font
descriptions	userui_core.c	/^static char* descriptions[] = {$/;"	v	file:
detect_endianess	fbsplash/common.c	/^void detect_endianess(void)$/;"	f
displayed_first	fbsplash/mng_splash.h	/^	int displayed_first;$/;"	m	struct:__anon5
do_config	fbsplash/common.c	/^int do_config(unsigned char origin)$/;"	f
do_getpic	fbsplash/common.c	/^int do_getpic(unsigned char origin, unsigned char do_cmds, char mode)$/;"	f
do_test_run	userui_core.c	/^static void do_test_run() {$/;"	f	file:
draw_progress_bar	userui_text.c	/^static int draw_progress_bar = 1;$/;"	v	file:
e_display	fbsplash/splash.h	/^enum ESVC { e_display, e_svc_inact_start, e_svc_inact_stop, e_svc_start, $/;"	e	enum:ESVC
e_svc_inact_start	fbsplash/splash.h	/^enum ESVC { e_display, e_svc_inact_start, e_svc_inact_stop, e_svc_start, $/;"	e	enum:ESVC
e_svc_inact_stop	fbsplash/splash.h	/^enum ESVC { e_display, e_svc_inact_start, e_svc_inact_stop, e_svc_start, $/;"	e	enum:ESVC
e_svc_start	fbsplash/splash.h	/^enum ESVC { e_display, e_svc_inact_start, e_svc_inact_stop, e_svc_start, $/;"	e	enum:ESVC
e_svc_start_failed	fbsplash/splash.h	/^	    e_svc_start_failed };$/;"	e	enum:ESVC
e_svc_started	fbsplash/splash.h	/^	    e_svc_started, e_svc_stop, e_svc_stopped, e_svc_stop_failed, $/;"	e	enum:ESVC
e_svc_stop	fbsplash/splash.h	/^	    e_svc_started, e_svc_stop, e_svc_stopped, e_svc_stop_failed, $/;"	e	enum:ESVC
e_svc_stop_failed	fbsplash/splash.h	/^	    e_svc_started, e_svc_stop, e_svc_stopped, e_svc_stop_failed, $/;"	e	enum:ESVC
e_svc_stopped	fbsplash/splash.h	/^	    e_svc_started, e_svc_stop, e_svc_stopped, e_svc_stop_failed, $/;"	e	enum:ESVC
endianess	fbsplash/common.c	/^enum ENDIANESS endianess;$/;"	v	typeref:enum:ENDIANESS
enforce_lifesavers	userui_core.c	/^static void enforce_lifesavers() {$/;"	f	file:
eval_text	fbsplash/render.c	/^char *eval_text(char *txt)$/;"	f
face	fbsplash/ttf.h	/^	FT_Face face;$/;"	m	struct:_TTF_Font
fade_in	fbsplash/effects.c	/^void fade_in(u8 *dst, u8 *image, struct fb_cmap cmap, u8 bgnd, int fd)$/;"	f
fade_in_directcolor	fbsplash/effects.c	/^void fade_in_directcolor(u8 *dst, u8 *image, int fd)$/;"	f
fade_in_truecolor	fbsplash/effects.c	/^void fade_in_truecolor(u8 *dst, u8 *image)$/;"	f
fb_blen	fbsplash/common.c	/^u8 fb_rlen, fb_glen, fb_blen;	\/* red, green, blue length *\/$/;"	v
fb_bo	fbsplash/common.c	/^u8 fb_ro, fb_go, fb_bo; 	\/* red, green, blue offset *\/$/;"	v
fb_fd	fbsplash/userui_fbsplash_core.c	/^int fb_fd, fbsplash_fd = -1;$/;"	v
fb_fix	fbsplash/common.c	/^struct fb_fix_screeninfo   fb_fix;$/;"	v	typeref:struct:fb_fix_screeninfo
fb_glen	fbsplash/common.c	/^u8 fb_rlen, fb_glen, fb_blen;	\/* red, green, blue length *\/$/;"	v
fb_go	fbsplash/common.c	/^u8 fb_ro, fb_go, fb_bo; 	\/* red, green, blue offset *\/$/;"	v
fb_mng_closestream	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_closestream(mng_handle handle)$/;"	f	file:
fb_mng_errorproc	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_errorproc(mng_handle handler, mng_int32 code,$/;"	f	file:
fb_mng_getcanvasline	fbsplash/mng_callbacks.c	/^static mng_ptr fb_mng_getcanvasline(mng_handle handle, mng_uint32 line_num)$/;"	f	file:
fb_mng_gettickcount	fbsplash/mng_callbacks.c	/^static mng_uint32 fb_mng_gettickcount(mng_handle handle)$/;"	f	file:
fb_mng_memalloc	fbsplash/mng_callbacks.c	/^mng_ptr fb_mng_memalloc(mng_size_t len)$/;"	f
fb_mng_memfree	fbsplash/mng_callbacks.c	/^void fb_mng_memfree(mng_ptr p, mng_size_t len)$/;"	f
fb_mng_openstream	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_openstream(mng_handle handle)$/;"	f	file:
fb_mng_processheader	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_processheader(mng_handle handle, mng_uint32 width,$/;"	f	file:
fb_mng_readdata	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_readdata(mng_handle handle, mng_ptr buf, $/;"	f	file:
fb_mng_refresh	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_refresh(mng_handle handle, mng_uint32 x, mng_uint32 y,$/;"	f	file:
fb_mng_settimer	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_settimer(mng_handle handle, mng_uint32 msecs)$/;"	f	file:
fb_mng_traceproc	fbsplash/mng_callbacks.c	/^static mng_bool fb_mng_traceproc(mng_handle handle, mng_int32 funcnr,$/;"	f	file:
fb_opt	fbsplash/common.c	/^u8 fb_opt = 0;			\/* can we use optimized 24\/32bpp routines? *\/$/;"	v
fb_rlen	fbsplash/common.c	/^u8 fb_rlen, fb_glen, fb_blen;	\/* red, green, blue length *\/$/;"	v
fb_ro	fbsplash/common.c	/^u8 fb_ro, fb_go, fb_bo; 	\/* red, green, blue offset *\/$/;"	v
fb_var	fbsplash/common.c	/^struct fb_var_screeninfo   fb_var;$/;"	v	typeref:struct:fb_var_screeninfo
fbsplash_cleanup	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_cleanup() {$/;"	f	file:
fbsplash_cmdline_options	fbsplash/userui_fbsplash_core.c	/^static char *fbsplash_cmdline_options()$/;"	f	file:
fbsplash_fd	fbsplash/userui_fbsplash_core.c	/^int fb_fd, fbsplash_fd = -1;$/;"	v
fbsplash_keypress	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_keypress(int key) {$/;"	f	file:
fbsplash_log_level_change	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_log_level_change() {$/;"	f	file:
fbsplash_memory_required	fbsplash/userui_fbsplash_core.c	/^static unsigned long fbsplash_memory_required() {$/;"	f	file:
fbsplash_message	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_message(unsigned long type, unsigned long level, int normally_logged, char *msg) {$/;"	f	file:
fbsplash_option_handler	fbsplash/userui_fbsplash_core.c	/^static int fbsplash_option_handler(char c)$/;"	f	file:
fbsplash_prepare	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_prepare() {$/;"	f	file:
fbsplash_redraw	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_redraw() {$/;"	f	file:
fbsplash_update_progress	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_update_progress(unsigned long value, unsigned long maximum, char *msg) {$/;"	f	file:
fbsplash_update_silent_message	fbsplash/userui_fbsplash_core.c	/^static void fbsplash_update_silent_message() {$/;"	f	file:
fetch_message	userui_core.c	/^static struct nlmsghdr *fetch_message(void* buf, int buf_size, int non_block) {$/;"	f	file:
file	fbsplash/splash.h	/^	char *file;$/;"	m	struct:__anon13
filename	fbsplash/splash.h	/^	char *filename;$/;"	m	struct:__anon8
flags	fbsplash/splash.h	/^	u8 flags;$/;"	m	struct:__anon12
flags	fbsplash/splash.h	/^	u8 flags;$/;"	m	struct:__anon14
flush_scrollback	userui_text.c	/^static void flush_scrollback()$/;"	f	file:
font	fbsplash/splash.h	/^	TTF_Font *font;$/;"	m	struct:__anon13
font	fbsplash/splash.h	/^	font_e *font;$/;"	m	struct:__anon14
font_e	fbsplash/splash.h	/^} font_e;$/;"	t	typeref:struct:__anon13
fonts	fbsplash/parse.c	/^list fonts = { NULL, NULL };$/;"	v
frame_buffer	fbsplash/userui_fbsplash_core.c	/^static char *frame_buffer;$/;"	v	file:
free_fonts	fbsplash/ttf.c	/^int free_fonts(void)$/;"	f
g	fbsplash/image.c	/^	u8 r, g, b;$/;"	m	struct:__anon4	file:
g	fbsplash/splash.h	/^	float r, g, b, a;$/;"	m	struct:colorf
g	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:color
g	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:truecolor
generic_fls	userui.h	/^static __inline__ int generic_fls(int x)$/;"	f
get_active_vt	fbsplash/userui_fbsplash_core.c	/^static int get_active_vt() {$/;"	f	file:
get_cfg_file	fbsplash/common.c	/^char *get_cfg_file(char *theme) $/;"	f
get_console_loglevel	userui_core.c	/^void get_console_loglevel() {$/;"	f
get_fb_settings	fbsplash/common.c	/^int get_fb_settings(int fb_num)$/;"	f
get_filepath	fbsplash/common.c	/^char *get_filepath(char *path) $/;"	f
get_fontpath	fbsplash/parse.c	/^char *get_fontpath(char *t)$/;"	f
get_info	userui_core.c	/^static void get_info() {$/;"	f	file:
get_nofreeze	userui_core.c	/^static void get_nofreeze() {$/;"	f	file:
get_program_output	fbsplash/render.c	/^char *get_program_output(char *prg, unsigned char origin)$/;"	f
getcfg	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
getmode	fbsplash/splash.h	/^	    setmode, getmode, repaint, start_daemon };$/;"	e	enum:TASK
getstate	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
global_font	fbsplash/ttf.c	/^TTF_Font *global_font;$/;"	v
glyph_italics	fbsplash/ttf.h	/^	float glyph_italics;$/;"	m	struct:_TTF_Font
glyph_overhang	fbsplash/ttf.h	/^	int glyph_overhang;$/;"	m	struct:_TTF_Font
h	fbsplash/splash.h	/^	int w, h;$/;"	m	struct:__anon8
handle_params	userui_core.c	/^static void handle_params(int argc, char **argv) {$/;"	f	file:
have_termios_backup	userui_core.c	/^static int have_termios_backup = 0;$/;"	v	file:
head	fbsplash/splash.h	/^	item *head, *tail; $/;"	m	struct:__anon7
height	fbsplash/ttf.h	/^	int height;$/;"	m	struct:_TTF_Font
hide_cursor	fbsplash/userui_fbsplash_core.c	/^static void hide_cursor() {$/;"	f	file:
hide_cursor	userui_text.c	/^static inline void hide_cursor() { write(1, "\\033[?25l\\033[?1c", 11); }$/;"	f	file:
hotspot	fbsplash/splash.h	/^	u8 hotspot;$/;"	m	struct:__anon14
icon	fbsplash/splash.h	/^} icon;$/;"	t	typeref:struct:__anon9
icon_img	fbsplash/splash.h	/^} icon_img;$/;"	t	typeref:struct:__anon8
icons	fbsplash/parse.c	/^list icons = { NULL, NULL };$/;"	v
img	fbsplash/splash.h	/^	icon_img *img;$/;"	m	struct:__anon9
index	fbsplash/ttf.h	/^	FT_UInt index;$/;"	m	struct:cached_glyph
init	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
install_sighand	userui_core.c	/^static void install_sighand(int signum, sighandler_t handler) {$/;"	f	file:
inter_color	fbsplash/render.c	229;"	d	file:
interpolate_box	fbsplash/render.c	/^void interpolate_box(box *a, box *b)$/;"	f
is_in_svclist	fbsplash/parse.c	/^int is_in_svclist(char *svc, char *list)$/;"	f
is_png	fbsplash/image.c	/^int is_png(char *filename)$/;"	f
is_zero_color	fbsplash/parse.c	661;"	d	file:
ishexdigit	fbsplash/parse.c	/^int ishexdigit(char c) $/;"	f
item	fbsplash/splash.h	/^typedef struct item {$/;"	s
item	fbsplash/splash.h	/^} item;$/;"	t	typeref:struct:item
keypress	userui.h	/^	void (*keypress) (int key);$/;"	m	struct:userui_ops
keypress_signal_handler	userui_core.c	/^static void keypress_signal_handler(int sig) {$/;"	f	file:
last_pos	fbsplash/userui_fbsplash_core.c	/^static unsigned long cur_value, cur_maximum, last_pos;$/;"	v	file:
lastheader	userui_text.c	/^static char lastheader[512];$/;"	v	file:
lastheader_message_len	userui_text.c	/^static int lastheader_message_len = 0;$/;"	v	file:
lastloglevel	fbsplash/userui_fbsplash_core.c	/^static int lastloglevel;$/;"	v	file:
lastloglevel	userui_text.c	/^static int lastloglevel = -1;$/;"	v	file:
lastmessage	fbsplash/userui_fbsplash_core.c	/^static char lastmessage[512];$/;"	v	file:
len	fbsplash/mng_splash.h	/^	int len, ptr, open;$/;"	m	struct:__anon5
library	fbsplash/ttf.c	/^static FT_Library library;$/;"	v	file:
line	fbsplash/parse.c	/^int line = 0;$/;"	v
lineskip	fbsplash/ttf.h	/^	int lineskip;$/;"	m	struct:_TTF_Font
list	fbsplash/splash.h	/^} list;$/;"	t	typeref:struct:__anon7
list_add	fbsplash/list.c	/^void list_add(list *l, void *obj)$/;"	f
list_init	fbsplash/splash.h	61;"	d
little	fbsplash/splash.h	/^enum ENDIANESS { little, big };$/;"	e	enum:ENDIANESS
load_bg_images	fbsplash/image.c	/^int load_bg_images(char mode)$/;"	f
load_fonts	fbsplash/ttf.c	/^int load_fonts(void)$/;"	f
load_images	fbsplash/image.c	/^int load_images(char mode)$/;"	f
load_jpeg	fbsplash/image.c	/^int load_jpeg(char *filename, u8 **data, int *width, int *height)$/;"	f
load_png	fbsplash/image.c	/^int load_png(char *filename, u8 **data, struct fb_cmap *cmap, int *width, int *height, u8 want_alpha)$/;"	f
lock_memory	userui_core.c	/^static void lock_memory() {$/;"	f	file:
log_level_change	userui.h	/^	void (*log_level_change) ();$/;"	m	struct:userui_ops
longopts	userui.h	/^	struct option *longopts;$/;"	m	struct:userui_ops	typeref:struct:userui_ops::option
main	userui_core.c	/^int main(int argc, char **argv) {$/;"	f
max	fbsplash/splash.h	45;"	d
maxx	fbsplash/ttf.h	/^	int maxx;$/;"	m	struct:cached_glyph
maxy	fbsplash/ttf.h	/^	int maxy;$/;"	m	struct:cached_glyph
memory_required	userui.h	/^	unsigned long (*memory_required) ();$/;"	m	struct:userui_ops
message	userui.h	/^	void (*message) (unsigned long type, unsigned long level, int normally_logged, char *text);$/;"	m	struct:userui_ops
message_loop	userui_core.c	/^static void message_loop() {$/;"	f	file:
min	fbsplash/splash.h	44;"	d
minx	fbsplash/ttf.h	/^	int minx;$/;"	m	struct:cached_glyph
miny	fbsplash/ttf.h	/^	int miny;$/;"	m	struct:cached_glyph
mng	fbsplash/splash.h	/^	mng_handle mng;$/;"	m	struct:__anon12
mng_anim	fbsplash/mng_splash.h	/^} mng_anim;$/;"	t	typeref:struct:__anon5
mng_display_next	fbsplash/mng_render.c	/^int mng_display_next(mng_handle mngh, unsigned char* dest, int x, int y)$/;"	f
mng_display_restart	fbsplash/mng_render.c	/^mng_retcode mng_display_restart(mng_handle mngh)$/;"	f
mng_done	fbsplash/mng_render.c	/^void mng_done(mng_handle mngh)$/;"	f
mng_init_callbacks	fbsplash/mng_callbacks.c	/^mng_retcode mng_init_callbacks(mng_handle handle)$/;"	f
mng_load	fbsplash/mng_render.c	/^mng_handle mng_load(char* filename)$/;"	f
mng_readfile	fbsplash/mng_render.c	/^static int mng_readfile(mng_handle mngh, char *filename)$/;"	f	file:
mng_render_next	fbsplash/mng_render.c	/^mng_retcode mng_render_next(mng_handle mngh)$/;"	f
mng_render_proportional	fbsplash/mng_render.c	/^mng_retcode mng_render_proportional(mng_handle mngh, int progress)$/;"	f
move_cursor_to	fbsplash/userui_fbsplash_core.c	/^static inline void move_cursor_to(int c, int r) { printf("\\033[%d;%dH", r, c); }$/;"	f	file:
move_cursor_to	userui_text.c	/^static inline void move_cursor_to(int c, int r) { printf("\\033[%d;%dH", r, c); }$/;"	f	file:
my_vm_size	userui_core.c	/^static long my_vm_size() {$/;"	f	file:
name	fbsplash/parse.c	/^	char *name;$/;"	m	struct:config_opt	file:
name	userui.h	/^	char *name;$/;"	m	struct:userui_ops
need_cleanup	userui_core.c	/^static int need_cleanup = 0;$/;"	v	file:
need_loglevel_change	userui_core.c	/^static volatile int need_loglevel_change = 0;$/;"	v	file:
netlink_socket_num	userui_core.c	/^static int netlink_socket_num = 0;$/;"	v	file:
newbarposn	userui_text.c	/^static int barwidth = 0, barposn = -1, newbarposn = 0;$/;"	v	file:
next	fbsplash/splash.h	/^	struct item *next;$/;"	m	struct:item	typeref:struct:item::item
nlsock	userui_core.c	/^static int nlsock = -1;$/;"	v	file:
none	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
notify_space_pressed	userui_core.c	/^static void notify_space_pressed() {$/;"	f	file:
num_frames	fbsplash/mng_splash.h	/^	int num_frames;$/;"	m	struct:__anon5
o_anim	fbsplash/splash.h	/^	enum { o_box, o_icon, o_text, o_anim } type;$/;"	e	enum:obj::__anon10
o_box	fbsplash/splash.h	/^	enum { o_box, o_icon, o_text, o_anim } type;$/;"	e	enum:obj::__anon10
o_icon	fbsplash/splash.h	/^	enum { o_box, o_icon, o_text, o_anim } type;$/;"	e	enum:obj::__anon10
o_text	fbsplash/splash.h	/^	enum { o_box, o_icon, o_text, o_anim } type;$/;"	e	enum:obj::__anon10
obj	fbsplash/splash.h	/^typedef struct obj {$/;"	s
obj	fbsplash/splash.h	/^} obj;$/;"	t	typeref:struct:obj
objs	fbsplash/parse.c	/^list objs = { NULL, NULL };$/;"	v
off	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
on	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
open	fbsplash/mng_splash.h	/^	int len, ptr, open;$/;"	m	struct:__anon5
open_console	userui_core.c	/^static void open_console() {$/;"	f	file:
open_cr	fbsplash/splash.h	218;"	d
open_fb	fbsplash/common.c	/^int open_fb()$/;"	f
open_misc	userui_core.c	/^static void open_misc() {$/;"	f	file:
open_netlink	userui_core.c	/^static void open_netlink() {$/;"	f	file:
open_tty	fbsplash/common.c	/^int open_tty(int tty)$/;"	f
option_handler	userui.h	/^	int (*option_handler) (char c);$/;"	m	struct:userui_ops
opts	fbsplash/parse.c	/^struct config_opt opts[] =$/;"	v	typeref:struct:config_opt
optstring	userui.h	/^	char *optstring;$/;"	m	struct:userui_ops
p	fbsplash/splash.h	/^	void *p;$/;"	m	struct:item
p	fbsplash/splash.h	/^	void *p;$/;"	m	struct:obj
paint	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
parse_anim	fbsplash/parse.c	/^void parse_anim(char *t)$/;"	f
parse_box	fbsplash/parse.c	/^void parse_box(char *t)$/;"	f
parse_cfg	fbsplash/parse.c	/^int parse_cfg(char *cfgfile)$/;"	f
parse_color	fbsplash/parse.c	/^int parse_color(char **t, struct color *cl) $/;"	f
parse_fontpath	fbsplash/parse.c	/^void parse_fontpath(char *t, struct config_opt opt)$/;"	f
parse_icon	fbsplash/parse.c	/^void parse_icon(char *t)$/;"	f
parse_int	fbsplash/parse.c	/^void parse_int(char *t, struct config_opt opt)$/;"	f
parse_path	fbsplash/parse.c	/^void parse_path(char *t, struct config_opt opt)$/;"	f
parse_quoted_string	fbsplash/parse.c	/^char *parse_quoted_string(char *t, u8 keepvar)$/;"	f
parse_rect	fbsplash/parse.c	/^void parse_rect(char *t)$/;"	f
parse_svc_state	fbsplash/parse.c	/^int parse_svc_state(char *t, enum ESVC *state)$/;"	f
parse_text	fbsplash/parse.c	/^void parse_text(char *t)$/;"	f
pic	fbsplash/common.c	/^struct fb_image pic;$/;"	v	typeref:struct:fb_image
pic_file	fbsplash/common.c	/^char *pic_file = NULL;$/;"	v
picbuf	fbsplash/splash.h	/^	u8 *picbuf;$/;"	m	struct:__anon8
pixmap	fbsplash/ttf.h	/^	FT_Bitmap pixmap;$/;"	m	struct:cached_glyph
powerdown_method	userui_core.c	/^static int powerdown_method = 0;$/;"	v	file:
prep_bgnd	fbsplash/render.c	/^void prep_bgnd(u8 *target, u8 *src, int x, int y, int w, int h)$/;"	f
prep_bgnds	fbsplash/render.c	/^void prep_bgnds(u8 *target, u8 *bgnd, char mode)$/;"	f
prepare	userui.h	/^	void (*prepare) ();$/;"	m	struct:userui_ops
prepare_console	userui_core.c	/^static void prepare_console() {$/;"	f	file:
print_mng_error	fbsplash/mng_splash.h	53;"	d
printerr	fbsplash/splash.h	42;"	d
printk	userui_core.c	/^static void printk(char *msg, ...)$/;"	f	file:
printk_f	userui_core.c	/^static FILE *printk_f = NULL;$/;"	v	file:
printwarn	fbsplash/splash.h	43;"	d
progress_text	fbsplash/common.c	/^char *progress_text = NULL;$/;"	v
progress_text	fbsplash/userui_fbsplash_core.c	/^char *progress_text;$/;"	v
ptr	fbsplash/mng_splash.h	/^	int len, ptr, open;$/;"	m	struct:__anon5
put_img	fbsplash/effects.c	/^void put_img(u8 *dst, u8 *src)$/;"	f
put_pixel	fbsplash/render.c	/^inline void put_pixel (u8 a, u8 r, u8 g, u8 b, u8 *src, u8 *dst, u8 add)$/;"	f
r	fbsplash/image.c	/^	u8 r, g, b;$/;"	m	struct:__anon4	file:
r	fbsplash/splash.h	/^	float r, g, b, a;$/;"	m	struct:colorf
r	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:color
r	fbsplash/splash.h	/^	u8 r, g, b, a;$/;"	m	struct:truecolor
raw_keypresses	userui_core.c	/^static int raw_keypresses = 0;$/;"	v	file:
read_usplash_conf	usplash/userui_usplash_core.c	/^static void read_usplash_conf() {$/;"	f	file:
rect	fbsplash/splash.h	/^} rect;$/;"	t	typeref:struct:__anon11
rects	fbsplash/parse.c	/^list rects = { NULL, NULL };$/;"	v
redraw	userui.h	/^	void (*redraw) ();$/;"	m	struct:userui_ops
register_keypress_handler	userui_core.c	/^static void register_keypress_handler() {$/;"	f	file:
render_box2	fbsplash/render.c	/^void render_box2(box *box, u8 *target)$/;"	f
render_icon	fbsplash/render.c	/^void render_icon(icon *ticon, u8 *target)$/;"	f
render_objs	fbsplash/render.c	/^void render_objs(u8 *target, u8 *bgnd, char mode, unsigned char origin, int progress_only)$/;"	f
rendermessage	fbsplash/userui_fbsplash_core.c	/^static char rendermessage[512];$/;"	v	file:
repaint	fbsplash/splash.h	/^	    setmode, getmode, repaint, start_daemon };$/;"	e	enum:TASK
report_nl_error	userui_core.c	/^static void report_nl_error(struct nlmsghdr *nlh) {$/;"	f	file:
request_abort_suspend	userui_core.c	/^static void request_abort_suspend() {$/;"	f	file:
reserve_memory	userui_core.c	/^static void reserve_memory(unsigned long bytes) {$/;"	f	file:
reset_display	userui_text.c	/^static inline void reset_display() { write(1, "\\033c", 2); }$/;"	f	file:
reset_silent_img	fbsplash/userui_fbsplash_core.c	/^static void reset_silent_img() {$/;"	f	file:
restore_console	userui_core.c	/^static void restore_console() {$/;"	f	file:
resuming	userui_core.c	/^volatile int resuming = 0;$/;"	v
rgbcolor	fbsplash/image.c	/^} __attribute__ ((packed)) rgbcolor;$/;"	t	typeref:struct:__anon4	file:
running	userui_core.c	/^static int running = 0;$/;"	v	file:
safe_to_exit	userui_core.c	/^static int safe_to_exit = 1;$/;"	v	file:
saved_console_loglevel	userui_core.c	/^static int saved_console_loglevel = -1;$/;"	v	file:
scratch	fbsplash/ttf.h	/^	c_glyph scratch;$/;"	m	struct:_TTF_Font
send_message	userui_core.c	/^int send_message(int type, void* buf, int len) {$/;"	f
send_ready	userui_core.c	/^static int send_ready() {$/;"	f	file:
set_cb	fbsplash/mng_callbacks.c	167;"	d	file:
set_cb	fbsplash/mng_callbacks.c	184;"	d	file:
set_console_loglevel	userui_core.c	/^void set_console_loglevel(int exiting) {$/;"	f
set_directcolor_cmap	fbsplash/effects.c	/^void set_directcolor_cmap(int fd)$/;"	f
setcfg	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
setmode	fbsplash/splash.h	/^	    setmode, getmode, repaint, start_daemon };$/;"	e	enum:TASK
setpic	fbsplash/splash.h	/^enum TASK { setpic, init, on, off, setcfg, getcfg, getstate, none, paint, $/;"	e	enum:TASK
setup_signal_handlers	userui_core.c	/^static void setup_signal_handlers() {$/;"	f	file:
show_cursor	fbsplash/userui_fbsplash_core.c	/^static void show_cursor() {$/;"	f	file:
show_cursor	userui_text.c	/^static inline void show_cursor() { write(1, "\\033[?25h\\033[?0c", 11); }$/;"	f	file:
sig_hand	userui_core.c	/^static void sig_hand(int sig) {$/;"	f	file:
silent_img	fbsplash/image.c	/^struct fb_image silent_img;$/;"	v	typeref:struct:fb_image
silent_off	fbsplash/userui_fbsplash_core.c	/^static void silent_off() {$/;"	f	file:
size	fbsplash/splash.h	/^	int size;$/;"	m	struct:__anon13
skeleton_cleanup	userui_skeleton.c	/^static void skeleton_cleanup() {$/;"	f	file:
skeleton_keypress	userui_skeleton.c	/^static void skeleton_keypress(int key) {$/;"	f	file:
skeleton_log_level_change	userui_skeleton.c	/^static void skeleton_log_level_change(int loglevel) {$/;"	f	file:
skeleton_message	userui_skeleton.c	/^static void skeleton_message(unsigned long type, unsigned long level, int normally_logged, char *skeleton) {$/;"	f	file:
skeleton_prepare	userui_skeleton.c	/^static void skeleton_prepare() {$/;"	f	file:
skeleton_redraw	userui_skeleton.c	/^static void skeleton_redraw() {$/;"	f	file:
skeleton_update_progress	userui_skeleton.c	/^static void skeleton_update_progress(unsigned long value, unsigned long maximum, char *skeleton) {$/;"	f	file:
skip_nonwhitespace	fbsplash/parse.c	/^void skip_nonwhitespace(char **buf)$/;"	f
skip_whitespace	fbsplash/parse.c	/^void skip_whitespace(char **buf) $/;"	f
software_suspend_version	userui_core.c	/^char software_suspend_version[32];$/;"	v
splash_config	fbsplash/splash.h	/^struct splash_config {$/;"	s
start_daemon	fbsplash/splash.h	/^	    setmode, getmode, repaint, start_daemon };$/;"	e	enum:TASK
start_time	fbsplash/mng_splash.h	/^	struct timeval start_time;$/;"	m	struct:__anon5	typeref:struct:__anon5::timeval
status	fbsplash/splash.h	/^	u8 status;$/;"	m	struct:__anon12
status	fbsplash/splash.h	/^	u8 status;$/;"	m	struct:__anon9
stored	fbsplash/ttf.h	/^	int stored;$/;"	m	struct:cached_glyph
style	fbsplash/splash.h	/^	u8 style;$/;"	m	struct:__anon14
style	fbsplash/ttf.h	/^	int style;$/;"	m	struct:_TTF_Font
suspend_action	userui_core.c	/^volatile int suspend_action = 0;$/;"	v
suspend_debug	userui_core.c	/^volatile int suspend_debug = 0;$/;"	v
svc	fbsplash/splash.h	/^	char *svc;$/;"	m	struct:__anon12
svc	fbsplash/splash.h	/^	char *svc;$/;"	m	struct:__anon9
t_anim	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_box	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_color	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_fontpath	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_icon	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_int	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_path	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_rect	fbsplash/parse.c	/^	enum { t_int, t_path, t_box, t_icon, t_rect, t_anim, t_color, t_fontpath, $/;"	e	enum:config_opt::__anon6	file:
t_text	fbsplash/parse.c	/^		t_text } type;$/;"	e	enum:config_opt::__anon6	file:
tail	fbsplash/splash.h	/^	item *head, *tail; $/;"	m	struct:__anon7
termios	fbsplash/userui_fbsplash_core.c	/^static struct termios termios;$/;"	v	typeref:struct:termios	file:
termios	userui_text.c	/^static struct termios termios;$/;"	v	typeref:struct:termios	file:
termios_backup	userui_core.c	/^static struct termios termios_backup;$/;"	v	typeref:struct:termios	file:
test_run	userui_core.c	/^static int test_run = 0;$/;"	v	file:
text	fbsplash/splash.h	/^} text;$/;"	t	typeref:struct:__anon14
text	suspend_userui.h	/^	char text[255];$/;"	m	struct:userui_msg_params
text_cleanup	userui_text.c	/^static void text_cleanup()$/;"	f	file:
text_color	fbsplash/splash.h	/^	color text_color;$/;"	m	struct:splash_config
text_font	fbsplash/splash.h	/^	char *text_font;$/;"	m	struct:splash_config
text_keypress	userui_text.c	/^static void text_keypress(int key)$/;"	f	file:
text_loglevel_change	userui_text.c	/^static void text_loglevel_change()$/;"	f	file:
text_message	userui_text.c	/^static void text_message(unsigned long section, unsigned long level,$/;"	f	file:
text_prepare	userui_text.c	/^static void text_prepare() {$/;"	f	file:
text_prepare_status	userui_text.c	/^static void text_prepare_status(int printalways, int clearbar, int level, const char *fmt, ...)$/;"	f	file:
text_prepare_status_real	userui_text.c	/^static void text_prepare_status_real(int printalways, int clearbar, int level, const char *msg)$/;"	f	file:
text_redraw	userui_text.c	/^static void text_redraw()$/;"	f	file:
text_size	fbsplash/splash.h	/^	u16 text_size;$/;"	m	struct:splash_config
text_update_progress	userui_text.c	/^void text_update_progress(unsigned long value, unsigned long maximum,$/;"	f
text_x	fbsplash/splash.h	/^	u16 text_x, text_y;$/;"	m	struct:splash_config
text_y	fbsplash/splash.h	/^	u16 text_x, text_y;$/;"	m	struct:splash_config
th	fbsplash/splash.h	/^	u16 th;$/;"	m	struct:splash_config
toggle_debug_state	userui_core.c	/^static void toggle_debug_state(key) {$/;"	f	file:
toggle_log_all	userui_core.c	/^static void toggle_log_all() {$/;"	f	file:
toggle_pause	userui_core.c	/^static void toggle_pause() {$/;"	f	file:
toggle_poweroff	userui_core.c	/^static void toggle_poweroff(void) {$/;"	f	file:
toggle_reboot	userui_core.c	/^static void toggle_reboot() {$/;"	f	file:
toggle_singlestep	userui_core.c	/^static void toggle_singlestep() {$/;"	f	file:
truecolor	fbsplash/splash.h	/^typedef struct truecolor {$/;"	s
truecolor	fbsplash/splash.h	/^} __attribute__ ((packed)) truecolor;$/;"	t	typeref:struct:truecolor
truecolor2fb	fbsplash/image.c	/^void truecolor2fb (truecolor* data, u8* out, int len, int y, u8 alpha)$/;"	f
tty_set_silent	fbsplash/common.c	/^int tty_set_silent(int tty, int fd)$/;"	f
tty_unset_silent	fbsplash/common.c	/^int tty_unset_silent(int fd)$/;"	f
tw	fbsplash/splash.h	/^	u16 tw;$/;"	m	struct:splash_config
tx	fbsplash/splash.h	/^	u16 tx;$/;"	m	struct:splash_config
ty	fbsplash/splash.h	/^	u16 ty;$/;"	m	struct:splash_config
type	fbsplash/parse.c	/^		t_text } type;$/;"	m	struct:config_opt	typeref:enum:config_opt::__anon6	file:
type	fbsplash/splash.h	/^	enum ESVC type;$/;"	m	struct:__anon12	typeref:enum:__anon12::ESVC
type	fbsplash/splash.h	/^	enum ESVC type;$/;"	m	struct:__anon9	typeref:enum:__anon9::ESVC
type	fbsplash/splash.h	/^	enum { o_box, o_icon, o_text, o_anim } type;$/;"	m	struct:obj	typeref:enum:obj::__anon10
u16	fbsplash/splash.h	39;"	d
u32	fbsplash/splash.h	40;"	d
u8	fbsplash/splash.h	38;"	d
unblank_screen	userui_core.c	/^static void unblank_screen() {$/;"	f	file:
underline_height	fbsplash/ttf.h	/^	int underline_height;$/;"	m	struct:_TTF_Font
underline_offset	fbsplash/ttf.h	/^	int underline_offset;$/;"	m	struct:_TTF_Font
update_cursor_pos	userui_text.c	/^static int update_cursor_pos(void)$/;"	f	file:
update_fb_img	fbsplash/userui_fbsplash_core.c	/^static void update_fb_img() {$/;"	f	file:
update_help	userui_text.c	/^static void update_help(int update_all)$/;"	f	file:
update_progress	userui.h	/^	void (*update_progress) (unsigned long value, unsigned long maximum, char *text);$/;"	m	struct:userui_ops
userui_fbsplash_longopts	fbsplash/userui_fbsplash_core.c	/^static struct option userui_fbsplash_longopts[] = {$/;"	v	typeref:struct:option	file:
userui_fbsplash_ops	fbsplash/userui_fbsplash_core.c	/^static struct userui_ops userui_fbsplash_ops = {$/;"	v	typeref:struct:userui_ops	file:
userui_msg_params	suspend_userui.h	/^struct userui_msg_params {$/;"	s
userui_ops	fbsplash/userui_fbsplash_core.c	/^struct userui_ops *userui_ops = &userui_fbsplash_ops;$/;"	v	typeref:struct:userui_ops
userui_ops	userui.h	/^struct userui_ops {$/;"	s
userui_ops	userui_skeleton.c	/^struct userui_ops *userui_ops = &userui_skeleton_ops;$/;"	v	typeref:struct:userui_ops
userui_ops	userui_text.c	/^struct userui_ops *userui_ops = &userui_text_ops;$/;"	v	typeref:struct:userui_ops
userui_ops	usplash/userui_usplash_core.c	/^struct userui_ops *userui_ops = &userui_usplash_ops;$/;"	v	typeref:struct:userui_ops
userui_skeleton_ops	userui_skeleton.c	/^static struct userui_ops userui_skeleton_ops = {$/;"	v	typeref:struct:userui_ops	file:
userui_text_ops	userui_text.c	/^static struct userui_ops userui_text_ops = {$/;"	v	typeref:struct:userui_ops	file:
userui_usplash_cleanup	usplash/userui_usplash_core.c	/^static void userui_usplash_cleanup() {$/;"	f	file:
userui_usplash_keypress	usplash/userui_usplash_core.c	/^static void userui_usplash_keypress(int key) {$/;"	f	file:
userui_usplash_log_level_change	usplash/userui_usplash_core.c	/^static void userui_usplash_log_level_change(int loglevel) {$/;"	f	file:
userui_usplash_longopts	usplash/userui_usplash_core.c	/^static struct option userui_usplash_longopts[] = {$/;"	v	typeref:struct:option	file:
userui_usplash_message	usplash/userui_usplash_core.c	/^static void userui_usplash_message(unsigned long section, unsigned long level, int normally_logged, char *msg) {$/;"	f	file:
userui_usplash_ops	usplash/userui_usplash_core.c	/^static struct userui_ops userui_usplash_ops = {$/;"	v	typeref:struct:userui_ops	file:
userui_usplash_prepare	usplash/userui_usplash_core.c	/^static void userui_usplash_prepare() {$/;"	f	file:
userui_usplash_redraw	usplash/userui_usplash_core.c	/^static void userui_usplash_redraw() {$/;"	f	file:
userui_usplash_update_progress	usplash/userui_usplash_core.c	/^static void userui_usplash_update_progress(unsigned long value, unsigned long maximum, char *msg) {$/;"	f	file:
userui_usplash_verbose	usplash/userui_usplash_core.c	/^static int userui_usplash_verbose = 1;$/;"	v	file:
userui_usplash_xres	usplash/userui_usplash_core.c	/^static int userui_usplash_xres = 0;$/;"	v	file:
userui_usplash_yres	usplash/userui_usplash_core.c	/^static int userui_usplash_yres = 0;$/;"	v	file:
usplash_cmdline_options	usplash/userui_usplash_core.c	/^static char *usplash_cmdline_options()$/;"	f	file:
usplash_option_handler	usplash/userui_usplash_core.c	/^static int usplash_option_handler(char c)$/;"	f	file:
usplash_ready	usplash/userui_usplash_core.c	/^static int usplash_ready = 0;$/;"	v	file:
val	fbsplash/parse.c	/^	void *val;$/;"	m	struct:config_opt	file:
val	fbsplash/splash.h	/^	char *val;$/;"	m	struct:__anon14
vcsa_fd	userui_text.c	/^static int vcsa_fd = -1;$/;"	v	file:
verbose_img	fbsplash/image.c	/^struct fb_image verbose_img;$/;"	v	typeref:struct:fb_image
video_num_columns	fbsplash/userui_fbsplash_core.c	/^static int video_num_lines, video_num_columns;$/;"	v	file:
video_num_columns	userui_text.c	/^static int video_num_lines, video_num_columns, cur_x = -1, cur_y = -1;$/;"	v	file:
video_num_lines	fbsplash/userui_fbsplash_core.c	/^static int video_num_lines, video_num_columns;$/;"	v	file:
video_num_lines	userui_text.c	/^static int video_num_lines, video_num_columns, cur_x = -1, cur_y = -1;$/;"	v	file:
vt_cursor_disable	fbsplash/common.c	/^void vt_cursor_disable(int fd)$/;"	f
vt_cursor_enable	fbsplash/common.c	/^void vt_cursor_enable(int fd)$/;"	f
w	fbsplash/splash.h	/^	int w, h;$/;"	m	struct:__anon8
wait_msecs	fbsplash/mng_splash.h	/^	int wait_msecs;$/;"	m	struct:__anon5
x	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon12
x	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon14
x	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon9
x1	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon11
x1	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon15
x2	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon11
x2	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon15
xgetpid	userui.h	127;"	d
y	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon12
y	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon14
y	fbsplash/splash.h	/^	int x, y;$/;"	m	struct:__anon9
y1	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon11
y1	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon15
y2	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon11
y2	fbsplash/splash.h	/^	int x1, x2, y1, y2;$/;"	m	struct:__anon15
yoffset	fbsplash/ttf.h	/^	int yoffset;$/;"	m	struct:cached_glyph
zero_color	fbsplash/parse.c	660;"	d	file:
